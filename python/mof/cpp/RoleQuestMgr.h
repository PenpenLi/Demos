#ifndef MOF_ROLEQUESTMGR_H
#define MOF_ROLEQUESTMGR_H

class RoleQuestMgr{
public:
	void finishStudypassiveskillQuest(int);
	void isSubmitQuestToNpc(int,	int);
	void finishCopyQuest(int,int);
	void uiAddDoingList(void);
	void isQuestWorking(int);
	void updataAcceptableQuestIDs(void);
	void questFindNpc(int,int);
	void getDoingQuestIDs(std::map<int,std::vector<int,std::allocator<int>>,std::less<int>,std::allocator<std::pair<int const,std::vector<int,std::allocator<int>>>>> &,std::vector<int,std::allocator<int>>*);
	void getAcceptableQuestIDs(void);
	void getquestTarget(int);
	void uiAddAcceptableList(void);
	void checkQuestInFinishedList(int);
	void reqGiveUpQuest(int);
	void notifyADoingQuest(int);
	void findNpc(int, int);
	void checkCopyStarQuest(int);
	void checkConstellUpQuest(int);
	void getAQuestMinLv(int);
	void getNpcAcceptableQuests(int);
	void checkFinishEliteCopyQuest(int);
	void getItemForJob(int,int);
	void getNpcSubmitQusets(int);
	void notifyQuests(std::vector<int,std::allocator<int>>);
	void checkFinishCopyQuest(int);
	void findCopy(int, int);
	void addADoingQuest(int);
	void checkHasCopyQuestDialog(int, int, int *, int *);
	void findPathQuest(void);
	void isDialogToThisNpc(int, int);
	void checkNpcQuestSign(int);
	void findNearestCopyID(void);
	void addAFinishedQuest(int);
	void isSubmitQuestToNpc(int,int);
	void finishEliteCopyQuest(int,int);
	void finishArenaQuest(int);
	void finishCopyComboQuest(int,int);
	void finishUpEquipQuest(int);
	void notifyQuests(std::vector<int, std::allocator<int>>);
	void getDoingQuestProgress(int, int &, int &);
	void questFindNpc(int, int);
	void ackSubmitQuest(int);
	void findTown(int,int);
	void isDialogToThisNpc(int,int);
	void checkHasCopyQuestDialog(int,int,int *,int *);
	void addADoingQuest(int,std::vector<int,std::allocator<int>>);
	void finishStudySkillQuest(int);
	void finishConstelupgQuest(int);
	void questFindCopy(int);
	void getDoingQuestProgress(int,int &,int &);
	void getAQuestFullName(int);
	void checkShowNextLvQuest(void);
	void getNextLvQuest(int);
	void checkAllNpcSign(void);
	void checkQuestInDoingList(int);
	void finishDialogQuset(int, int);
	void finishCopyStarQuest(int,int);
	void checkArenaBattleQuest(int);
	void questFindPath(int);
	void deleteAAccpetabelQuest(int);
	void getItemForJob(int, int);
	void ~RoleQuestMgr();
	void getItemIDforJob(int,int);
	void addADoingQuest(int, std::vector<int, std::allocator<int>>);
	void getNpcDoingQuests(int);
	void getDailyQuestData(int &,int &);
	void deleteADoingQuest(int);
	void checkCopyComboQuest(int);
	void uiClearAcceptableQuest(void);
	void reqSubmitQuest(int);
	void finishCopyQuest(int, int);
	void getItemIDforJob(int, int);
	void checkUpEquipQuest(int);
	void finishCopyComboQuest(int, int);
	void finishDialogQuset(int,int);
	void checkStudySkillQuest(int);
	void getDoingQuestIDs(std::map<int, std::vector<int,	std::allocator<int>>, std::less<int>, std::allocator<std::pair<int const, std::vector<int, std::allocator<int>>>>> &, std::vector<int, std::allocator<int>>*);
	void getNpcDialogQuests(int);
	void findTown(int, int);
	void finishQuest(QuestCondition);
	void ackAccpetQuest(int);
	void findCopy(int,int);
	void ackGiveUpQuest(int);
	void checkStudypassiveskillQuest(int);
	void reqAcceptQuest(int);
	void finishCopyStarQuest(int, int);
	void finishEliteCopyQuest(int, int);
	void getDailyQuestData(int &, int &);
	void findNpc(int,int);
	void isCanSubmit(int);
}
#endif