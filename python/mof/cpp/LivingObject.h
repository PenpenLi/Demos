#ifndef MOF_LIVINGOBJECT_H
#define MOF_LIVINGOBJECT_H

class LivingObject{
public:
	void action(ObjState, ObjState, std::string);
	void addSkillAction(SkillAction *);
	void setObjTpltID(int);
	void setAtkSpeed(int);
	void createStroke(cocos2d::CCLabelTTF *,float,cocos2d::_ccColor3B);
	void getActionMoveSpeed(void)const;
	void getState(void)const;
	void skillStand(std::string);
	void setIsRecordDmgOther(bool);
	void clearSpeedFactor(void);
	void addHpNumberEffect(int);
	void emitSkill(int);
	void canChangeToState(ObjState);
	void changeSpeed(float,int);
	void getMaxHitStatistics(void);
	void getSpeedValueFactor(void)const;
	void hittedAction(LivingObject*,float,float,std::string);
	void getChangedHp(void)const;
	void getSpeedPercentFactor(void);
	void LivingObject(ObjType, int, int);
	void getActionMoveSpeed(void);
	void setIsKeepStateWhenAnimationEnd(bool);
	void setHasCriBuff(bool);
	void addHitStat(void);
	void atkInput(void);
	void getState(void);
	void getIsUnhurtState(void);
	void startSkillMoveState(void);
	void getBeHitStatistics(void)const;
	void resumeDef(float,int);
	void reset(void);
	void hittedAction(LivingObject*, float, float, eAnimationID);
	void setCurAnger(int);
	void recv(int, int, cocos2d::CCPoint, int);
	void death(LivingObject*);
	void getSpeed(void)const;
	void setSpeed(float);
	void submitAttack(LivingObject*, int, int);
	void removeAllSkillAction(void);
	void playHittedScream(void);
	void adjustPositionAndOriention(cocos2d::CCPoint, ObjOrientation);
	void attackAction(float,	float);
	void resumeSpeed(float, int);
	void doRunAction(ObjState,std::string);
	void getCriValueFactor(void)const;
	void beAtkEffectDelay(LivingObject*,float);
	void setDefValueFactor(float);
	void resumeHit(float, int);
	void getMaxHitStatistics(void)const;
	void beSkill(LivingObject*, int, SkillEffectVal *);
	void setHitStatistics(int);
	void resumeHit(float,int);
	void onPick(void);
	void attack(float);
	void resumeDodge(float, int);
	void addWordNumberEffect(WordNumberEffect *);
	void recv(int,	int, cocos2d::CCPoint, int);
	void cancelSkillCooling(int);
	void setCtrlMode(ObjCtrlMode);
	void action(ObjState,ObjState,std::string);
	void getSyncID(void);
	void getGroupID(void);
	void setDmgOther(int);
	void getHasAtkBuff(void);
	void hittedNumEffect(HitType, int);
	void setHitValueFactor(float);
	void setSpeedValueFactor(float);
	void getCriPercentFactor(void);
	void beSkill(LivingObject*,int,SkillEffectVal *);
	void getAtk(void);
	void changeAtk(float, int);
	void setSpeedPercentFactor(float);
	void getHitPercentFactor(void);
	void getAttackMoveTime(void);
	void atkOutput(void);
	void getHit(void);
	void resumeDodge(float,int);
	void clearHitEffects(void);
	void ResetBeHitStatistic(void);
	void setState(ObjState);
	void hittedEffectSelector(float);
	void stand(std::string);
	void beAtkEffectSelector(float);
	void clearState(void);
	void hittedNumEffect(HitType,int);
	void getHitStatistics(void);
	void setSpeedFactor(float,int);
	void getHasHitBuff(void);
	void skill(int);
	void getDodge(void);
	void showObjName(int, cocos2d::_ccColor3B, int);
	void recv(int,int,cocos2d::CCPoint,int);
	void setIsAttackContinue(bool);
	void getHasCriBuff(void);
	void getCurAnger(void)const;
	void deadAction(LivingObject*);
	void getAtkOrient(LivingObject*);
	void getCtrlMode(void)const;
	void getHasDodgeBuff(void);
	void resumeAtk(float, int);
	void setSyncID(int);
	void getDodgeValueFactor(void);
	void getNearestObj(std::vector<LivingObject*, std::allocator<LivingObject*>>);
	void setHasHitBuff(bool);
	void doRunAction(ObjState, std::string);
	void walkTo(cocos2d::CCPoint	const&,	float, std::string);
	void getDmgOther(void);
	void getCurSpeed(void);
	void changeAtk(float,int);
	void playAttackSound(int);
	void showObjName(int,cocos2d::_ccColor3B,int);
	void clearCurHitStat(float);
	void getHasSpeedBuff(void);
	void setIsSkillMoveState(bool);
	void beAtkEffectDelay(LivingObject*,	float);
	void getDefValueFactor(void)const;
	void setCriValueFactor(float);
	void getCri(void);
	void getIsRecordDmgOther(void);
	void getDefPercentFactor(void);
	void endSkillMoveState(void);
	void getIsSkillMoveState(void);
	void hasChangeBodySkillAction(void);
	void getHitValueFactor(void);
	void atkObjs(float, float, bool);
	void setAtkPercentFactor(float);
	void skillWalkTo(cocos2d::CCPoint const&, std::string, float, bool);
	void hittedEffectDelay(HitType, int,	LivingObject*, float);
	void setHitPercentFactor(float);
	void changeDef(float,int);
	void resumeDef(float, int);
	void setCurSpeedToWalkActionSpeed(void);
	void getSpeedPercentFactor(void)const;
	void changeHit(float,int);
	void setHasAtkBuff(bool);
	void walkTo(cocos2d::CCPoint	const&,float,std::string);
	void createStroke(cocos2d::CCLabelTTF *, float, cocos2d::_ccColor3B);
	void changeDef(float, int);
	void clearWordNumberEffect(void);
	void setHasDodgeBuff(bool);
	void getDefPercentFactor(void)const;
	void setChangedHp(int);
	void lastAttack(float);
	void resumeCri(float, int);
	void walkToStrongly(cocos2d::CCPoint	const&,	std::string);
	void changeHit(float, int);
	void playAttackHittedSound(void);
	void deadAction(LivingObject*,float,float);
	void setHasSpeedBuff(bool);
	void getHitPercentFactor(void)const;
	void deadAction(LivingObject*, float, float);
	void damage(int,LivingObject*);
	void adjustPositionAndOriention(cocos2d::CCPoint,ObjOrientation);
	void getNearestObj(std::vector<LivingObject*,std::allocator<LivingObject*>>);
	void atkObjs(float,float,bool);
	void getBeHitStatistics(void);
	void setGroupID(int);
	void hittedAction(LivingObject*, float, float, std::string);
	void setSpeedFactor(float, int);
	void walkToStrongly(cocos2d::CCPoint	const&,std::string);
	void changeSpeed(float, int);
	void setDefPercentFactor(float);
	void getAtkPercentFactor(void)const;
	void setMaxHitStatistics(int);
	void clearHitStat(void);
	void getDmgOther(void)const;
	void LivingObject(ObjType,int,int);
	void resumeCri(float,int);
	void getDodgeValueFactor(void)const;
	void getChangedHp(void);
	void chgState(ObjState);
	void getDodgePercentFactor(void);
	void submitAttack(LivingObject*,int,int);
	void getAtkValueFactor(void);
	void setIsUnhurtState(bool);
	void getObjCurrentSkillEffectList(void);
	void setCriPercentFactor(float);
	void ~LivingObject();
	void changeDodge(float,int);
	void getHasDefBuff(void);
	void standStrongly(std::string);
	void getCriValueFactor(void);
	void initHeadStuffNode(int);
	void getDef(void);
	void changeDodge(float, int);
	void setBeHitStatistics(int);
	void getCtrlMode(void);
	void removeNewSkillActionsBySkillID(int);
	void changeCri(float, int);
	void getIsKeepStateWhenAnimationEnd(void);
	void skillWalkTo(cocos2d::CCPoint const&,std::string,float,bool);
	void resumeSpeed(float,int);
	void playWordNumberEffect(float);
	void setDodgeValueFactor(float);
	void damage(int, LivingObject*);
	void update(float);
	void hittedLight(LivingObject*);
	void attackAction(std::string,float,int,float,float);
	void changeCri(float,int);
	void getHitStatistics(void)const;
	void getSpeedValueFactor(void);
	void setActionMoveSpeed(float);
	void clearCombo(float);
	void setHasDefBuff(bool);
	void getAttackMoveDistance(void);
	void getAtkValueFactor(void)const;
	void getCurAnger(void);
	void calcHittedNumberPos(void);
	void getCriPercentFactor(void)const;
	void getDodgePercentFactor(void)const;
	void hittedChangeColor(void);
	void getSyncID(void)const;
	void calcBeAtkRect(void);
	void hittedEffectDelay(HitType,int,LivingObject*,float);
	void beAtk(LivingObject*, float, float, bool);
	void calcAtkRect(void);
	void setDodgePercentFactor(float);
	void getIsAttackContinue(void);
	void removeSkillAction(int);
	void getDefValueFactor(void);
	void setAtkValueFactor(float);
	void resumeAtk(float,int);
	void getGroupID(void)const;
	void objWordNumberEffect(HitType, int, EffectWordColor);
	void hittedAction(LivingObject*,float,float,eAnimationID);
	void objWordNumberEffect(HitType,int,EffectWordColor);
	void getHitValueFactor(void)const;
	void getAtkPercentFactor(void);
	void getSpeed(void);
	void beAtk(LivingObject*,float,float,bool);
}
#endif